import os
import pandas as pd
from pathlib import Path

def get_sign(x):
    if x > 0: return 1
    elif x < 0: return -1
    else: return 0

""" delta thresholds """
def get_delta_thresholds(basin_level, folder, area, alpha):
    df_thd = pd.read_csv(f"outputs_delta/{folder}/{area}/basin_level_mean_std.csv").set_index('basin_level')
    mean = df_thd[f'mean_{area}'].loc[basin_level]
    std = df_thd[f'std_{area}'].loc[basin_level]
    print(f"mean: {mean}, std: {std}")

    thd_low = mean - alpha * std 
    thd_high = mean + alpha * std 
    print(f"thd_low: {thd_low}, thd_high: {thd_high}")
    return mean, std, thd_low, thd_high


p_thd = 0.025
input_dir = Path("outputs_utest_V1")
for folder in os.listdir(input_dir):
    
    if 'Permanent_water' == folder: alpha = 1.5
    if 'Reservoirs' == folder: alpha = 1.0

    for area in os.listdir(input_dir / folder):
        save_dir = Path("outputs_utest_V1_decision") / folder / area
        save_dir.mkdir(exist_ok=True, parents=True)

        for basin_level in [0, 3, 4, 5, 6, 7, 8]:
            print()
            print(f"{folder}/{area}/basin_level: {basin_level}/alpha: {alpha}/p_thd: {p_thd}")

            df = pd.read_csv( input_dir / folder / area / f"basins_level_{basin_level}_utest.csv")
            mean, std, thd_low, thd_high = get_delta_thresholds(basin_level, folder, area, alpha)

            df['decision'] = None
            df['decision'][(df['p_u'] < p_thd) & (df['delta'] < 0)] = -1 # decreased basins determined by utest
            df['decision'][(df['p_u'] < p_thd) & (df['delta'] > 0)] = 1 # increased basins  determined by utest
            df['decision'][df['p_u'] >= p_thd] = 0 # non-change determined by u-test
            df['decision'][(thd_low <= df['delta']) & (df['delta'] <= thd_high)] = 0 # non-change determined by delta mean and std
            df['decision'][df['baseline_median'] < 0.0225] = -99 # dry basins

            print(df['decision'].unique())
            num_99 = df[df['decision'] == 99].shape[0]
            neg = df[df['decision'] == -1].shape[0]
            stable = df[df['decision'].abs() != 1].shape[0]
            pos = df[df['decision'] == 1].shape[0]
            print(f"total: {df.shape[0]}, neg: {neg}, stable: {stable}, pos: {pos}, num_99: {num_99}")

            df['mean'] = mean
            df['std'] = std
            df['thd_low'] = thd_low
            df['thd_high'] = thd_high
            df['alpha'] = alpha
            df['p_thd'] = p_thd

            df = df[['id_bgl', 'basin_level', 'start_year', 't_score', 'p_t', 'u_score', 'mean', 'std', 'alpha', 
                     'thd_low', 'thd_high', 'baseline_median', 'delta','p_u', 'p_thd', 'decision']]
            
            df.set_index('id_bgl').to_csv(save_dir / f"basins_level_{basin_level}_utest.csv")